{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoList/TodoList.tsx","components/TodoUser.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","TodoUsers","userId","useState","user","setUser","useEffect","getUser","callUser","href","email","name","TodoModal","todo","setUserId","timer","setTimer","id","type","onClick","title","classNames","completed","TodoList","todos","selectedId","setSelectedId","query","setQuery","All","sortType","setSortType","visibleTodos","Active","filter","Completed","getReorderedTodos","filteredTodos","fixedQuery","toLowerCase","includes","value","onChange","target","placeholder","event","style","pointerEvents","length","map","App","setTodos","allTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8066e096.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport { TodoModal } from '../TodoModal';\n\nimport { Todo } from '../../types/Todo';\n\nenum SortType {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\nfunction getReorderedTodos(\n  todos: Todo[],\n  sortType: SortType,\n): Todo[] {\n  const visibleTodos = [...todos];\n\n  switch (sortType) {\n    case SortType.Active:\n      return visibleTodos.filter(todo => {\n        return todo.completed === false;\n      });\n\n    case SortType.Completed:\n      return visibleTodos.filter(todo => {\n        return todo.completed === true;\n      });\n\n    default:\n      return visibleTodos;\n  }\n}\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [selectedId, setSelectedId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState(SortType.All);\n\n  const visibleTodos = getReorderedTodos(\n    todos,\n    sortType,\n  );\n\n  const filteredTodos = visibleTodos.filter(todo => {\n    const fixedQuery = query.toLowerCase();\n\n    return todo.title.includes(fixedQuery);\n  });\n\n  return (\n    <>\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={sortType}\n              onChange={({ target }) => {\n                // eslint-disable-next-line no-nested-ternary\n                return target.value === 'all'\n                  ? setSortType(SortType.All)\n                  : target.value === 'active'\n                    ? setSortType(SortType.Active)\n                    : setSortType(SortType.Completed);\n              }}\n            >\n              <option\n                value=\"all\"\n              >\n                All\n              </option>\n              <option\n                value=\"active\"\n              >\n                Active\n              </option>\n              <option\n                value=\"completed\"\n              >\n                Completed\n              </option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => {\n              return setQuery(event.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            {query.length\n              ? (\n                // eslint-disable-next-line jsx-a11y/control-has-associated-label\n                <button\n                  data-cy=\"clearSearchButton\"\n                  type=\"button\"\n                  className=\"delete\"\n                  onClick={() => setQuery('')}\n                />\n              )\n              : null}\n          </span>\n        </p>\n      </form>\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {filteredTodos.map(todo => {\n            return (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames(\n                      'has-text-success',\n                      { 'has-text-danger': !todo.completed },\n                    )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setSelectedId(todo.id)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames(\n                          'far',\n                          'fa-eye',\n                          { 'fa-eye-slash': selectedId === todo.id },\n                        )}\n                      />\n                    </span>\n                  </button>\n\n                  {selectedId === todo.id\n                    && <TodoModal todo={todo} setUserId={setSelectedId} />}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../api';\nimport { User } from '../types/User';\n\ntype Props = {\n  userId: number,\n};\n\nexport const TodoUsers: React.FC<Props> = ({ userId }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(userId).then(callUser => {\n      setUser(callUser);\n    });\n  }, []);\n\n  return (\n    <>\n      <a href={`mailto:${user?.email}`}>\n        {user?.name}\n      </a>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { TodoUsers } from '../TodoUser';\n\ntype Props = {\n  todo: Todo;\n  setUserId: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setUserId }) => {\n  const [timer, setTimer] = useState(false);\n\n  setTimeout(() => {\n    setTimer(true);\n  }, 300);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!timer ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setUserId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames(\n                  'has-text-success',\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <TodoUsers userId={todo.userId} />\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(allTodos => setTodos(allTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? <TodoList todos={todos} />\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}